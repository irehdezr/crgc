<?php

namespace Proxies\__CG__\PageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product_T extends \PageBundle\Entity\Product_T implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'id', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'pageTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'farmTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'orderTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'reviewsTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'informationTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'roastTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'weightTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'grindTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'cupScoringTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'speciesTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'speciesInfo', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'cultivarTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'gradeTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'processingTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'flavorNotesTitle'];
        }

        return ['__isInitialized__', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'id', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'pageTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'farmTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'orderTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'reviewsTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'informationTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'roastTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'weightTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'grindTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'cupScoringTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'speciesTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'speciesInfo', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'cultivarTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'gradeTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'processingTitle', '' . "\0" . 'PageBundle\\Entity\\Product_T' . "\0" . 'flavorNotesTitle'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product_T $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTitle($pageTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTitle', [$pageTitle]);

        return parent::setPageTitle($pageTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTitle', []);

        return parent::getPageTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setFarmTitle($farmTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFarmTitle', [$farmTitle]);

        return parent::setFarmTitle($farmTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getFarmTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFarmTitle', []);

        return parent::getFarmTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderTitle($orderTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderTitle', [$orderTitle]);

        return parent::setOrderTitle($orderTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderTitle', []);

        return parent::getOrderTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setReviewsTitle($reviewsTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReviewsTitle', [$reviewsTitle]);

        return parent::setReviewsTitle($reviewsTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getReviewsTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReviewsTitle', []);

        return parent::getReviewsTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setInformationTitle($informationTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInformationTitle', [$informationTitle]);

        return parent::setInformationTitle($informationTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getInformationTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInformationTitle', []);

        return parent::getInformationTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoastTitle($roastTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoastTitle', [$roastTitle]);

        return parent::setRoastTitle($roastTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoastTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoastTitle', []);

        return parent::getRoastTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeightTitle($weightTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeightTitle', [$weightTitle]);

        return parent::setWeightTitle($weightTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeightTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeightTitle', []);

        return parent::getWeightTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setGrindTitle($grindTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGrindTitle', [$grindTitle]);

        return parent::setGrindTitle($grindTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getGrindTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGrindTitle', []);

        return parent::getGrindTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCupScoringTitle($cupScoringTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCupScoringTitle', [$cupScoringTitle]);

        return parent::setCupScoringTitle($cupScoringTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getCupScoringTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCupScoringTitle', []);

        return parent::getCupScoringTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpeciesTitle($speciesTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpeciesTitle', [$speciesTitle]);

        return parent::setSpeciesTitle($speciesTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpeciesTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpeciesTitle', []);

        return parent::getSpeciesTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpeciesInfo($speciesInfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpeciesInfo', [$speciesInfo]);

        return parent::setSpeciesInfo($speciesInfo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpeciesInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpeciesInfo', []);

        return parent::getSpeciesInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function setCultivarTitle($cultivarTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCultivarTitle', [$cultivarTitle]);

        return parent::setCultivarTitle($cultivarTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getCultivarTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCultivarTitle', []);

        return parent::getCultivarTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setGradeTitle($gradeTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGradeTitle', [$gradeTitle]);

        return parent::setGradeTitle($gradeTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getGradeTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGradeTitle', []);

        return parent::getGradeTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setProcessingTitle($processingTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProcessingTitle', [$processingTitle]);

        return parent::setProcessingTitle($processingTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getProcessingTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProcessingTitle', []);

        return parent::getProcessingTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setFlavorNotesTitle($flavorNotesTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFlavorNotesTitle', [$flavorNotesTitle]);

        return parent::setFlavorNotesTitle($flavorNotesTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getFlavorNotesTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFlavorNotesTitle', []);

        return parent::getFlavorNotesTitle();
    }

}
