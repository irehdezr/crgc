<?php

namespace Proxies\__CG__\RegionBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Region extends \RegionBundle\Entity\Region implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'id', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'name', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image1', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image_description1', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image2', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image_description2', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image3', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image_description3', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'description', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'information', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'latitude', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'longitude', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'zoom', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'organoleptic_charactersitics', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'organoleptic_characteristics'];
        }

        return ['__isInitialized__', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'id', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'name', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image1', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image_description1', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image2', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image_description2', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image3', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'image_description3', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'description', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'information', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'latitude', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'longitude', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'zoom', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'organoleptic_charactersitics', '' . "\0" . 'RegionBundle\\Entity\\Region' . "\0" . 'organoleptic_characteristics'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Region $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage1($image1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage1', [$image1]);

        return parent::setImage1($image1);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage1', []);

        return parent::getImage1();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageDescription1($imageDescription1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageDescription1', [$imageDescription1]);

        return parent::setImageDescription1($imageDescription1);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageDescription1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageDescription1', []);

        return parent::getImageDescription1();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage2($image2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage2', [$image2]);

        return parent::setImage2($image2);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage2', []);

        return parent::getImage2();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageDescription2($imageDescription2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageDescription2', [$imageDescription2]);

        return parent::setImageDescription2($imageDescription2);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageDescription2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageDescription2', []);

        return parent::getImageDescription2();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage3($image3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage3', [$image3]);

        return parent::setImage3($image3);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage3', []);

        return parent::getImage3();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageDescription3($imageDescription3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageDescription3', [$imageDescription3]);

        return parent::setImageDescription3($imageDescription3);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageDescription3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageDescription3', []);

        return parent::getImageDescription3();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setInformation($information)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInformation', [$information]);

        return parent::setInformation($information);
    }

    /**
     * {@inheritDoc}
     */
    public function getInformation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInformation', []);

        return parent::getInformation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', [$latitude]);

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', []);

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', [$longitude]);

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', []);

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setZoom($zoom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZoom', [$zoom]);

        return parent::setZoom($zoom);
    }

    /**
     * {@inheritDoc}
     */
    public function getZoom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZoom', []);

        return parent::getZoom();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganolepticCharactersitics($organolepticCharactersitics)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganolepticCharactersitics', [$organolepticCharactersitics]);

        return parent::setOrganolepticCharactersitics($organolepticCharactersitics);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganolepticCharactersitics()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganolepticCharactersitics', []);

        return parent::getOrganolepticCharactersitics();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganolepticCharacteristics($organolepticCharacteristics)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganolepticCharacteristics', [$organolepticCharacteristics]);

        return parent::setOrganolepticCharacteristics($organolepticCharacteristics);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganolepticCharacteristics()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganolepticCharacteristics', []);

        return parent::getOrganolepticCharacteristics();
    }

}
