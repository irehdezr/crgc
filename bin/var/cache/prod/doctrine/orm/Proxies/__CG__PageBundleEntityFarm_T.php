<?php

namespace Proxies\__CG__\PageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Farm_T extends \PageBundle\Entity\Farm_T implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'id', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'descriptionTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'informationTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'awardsTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'locationTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'productsTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'elevationTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'harvestTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'speciesTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'cultivarTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'certificationsTitle'];
        }

        return ['__isInitialized__', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'id', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'descriptionTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'informationTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'awardsTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'locationTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'productsTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'elevationTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'harvestTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'speciesTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'cultivarTitle', '' . "\0" . 'PageBundle\\Entity\\Farm_T' . "\0" . 'certificationsTitle'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Farm_T $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescriptionTitle($descriptionTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescriptionTitle', [$descriptionTitle]);

        return parent::setDescriptionTitle($descriptionTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptionTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptionTitle', []);

        return parent::getDescriptionTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setInformationTitle($informationTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInformationTitle', [$informationTitle]);

        return parent::setInformationTitle($informationTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getInformationTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInformationTitle', []);

        return parent::getInformationTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setAwardsTitle($awardsTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAwardsTitle', [$awardsTitle]);

        return parent::setAwardsTitle($awardsTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getAwardsTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAwardsTitle', []);

        return parent::getAwardsTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocationTitle($locationTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocationTitle', [$locationTitle]);

        return parent::setLocationTitle($locationTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocationTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocationTitle', []);

        return parent::getLocationTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductsTitle($productsTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductsTitle', [$productsTitle]);

        return parent::setProductsTitle($productsTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductsTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductsTitle', []);

        return parent::getProductsTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setElevationTitle($elevationTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setElevationTitle', [$elevationTitle]);

        return parent::setElevationTitle($elevationTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getElevationTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getElevationTitle', []);

        return parent::getElevationTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setHarvestTitle($harvestTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHarvestTitle', [$harvestTitle]);

        return parent::setHarvestTitle($harvestTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getHarvestTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHarvestTitle', []);

        return parent::getHarvestTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpeciesTitle($speciesTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpeciesTitle', [$speciesTitle]);

        return parent::setSpeciesTitle($speciesTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpeciesTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpeciesTitle', []);

        return parent::getSpeciesTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCultivarTitle($cultivarTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCultivarTitle', [$cultivarTitle]);

        return parent::setCultivarTitle($cultivarTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getCultivarTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCultivarTitle', []);

        return parent::getCultivarTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCertificationsTitle($certificationsTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCertificationsTitle', [$certificationsTitle]);

        return parent::setCertificationsTitle($certificationsTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getCertificationsTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCertificationsTitle', []);

        return parent::getCertificationsTitle();
    }

}
