<?php

namespace Proxies\__CG__\FarmBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Farm_I extends \FarmBundle\Entity\Farm_I implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'id', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'name', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'image', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'description', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'elevation', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'harvest', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'latitude', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'longitude', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'products', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'farm_awards', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'region', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'certifications', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'cultivars'];
        }

        return ['__isInitialized__', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'id', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'name', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'image', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'description', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'elevation', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'harvest', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'latitude', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'longitude', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'products', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'farm_awards', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'region', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'certifications', '' . "\0" . 'FarmBundle\\Entity\\Farm_I' . "\0" . 'cultivars'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Farm_I $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setElevation($elevation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setElevation', [$elevation]);

        return parent::setElevation($elevation);
    }

    /**
     * {@inheritDoc}
     */
    public function getElevation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getElevation', []);

        return parent::getElevation();
    }

    /**
     * {@inheritDoc}
     */
    public function setHarvest($harvest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHarvest', [$harvest]);

        return parent::setHarvest($harvest);
    }

    /**
     * {@inheritDoc}
     */
    public function getHarvest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHarvest', []);

        return parent::getHarvest();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', [$latitude]);

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', []);

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', [$longitude]);

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', []);

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct(\ProductBundle\Entity\Product_I $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', [$product]);

        return parent::addProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduct(\ProductBundle\Entity\Product_I $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduct', [$product]);

        return parent::removeProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProducts', []);

        return parent::getProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function addFarmAward(\FarmBundle\Entity\Farm_Award $farmAward)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFarmAward', [$farmAward]);

        return parent::addFarmAward($farmAward);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFarmAward(\FarmBundle\Entity\Farm_Award $farmAward)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFarmAward', [$farmAward]);

        return parent::removeFarmAward($farmAward);
    }

    /**
     * {@inheritDoc}
     */
    public function getFarmAwards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFarmAwards', []);

        return parent::getFarmAwards();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegion(\FarmBundle\Entity\Region $region = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegion', [$region]);

        return parent::setRegion($region);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegion', []);

        return parent::getRegion();
    }

    /**
     * {@inheritDoc}
     */
    public function addCertification(\FarmBundle\Entity\Certification $certification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCertification', [$certification]);

        return parent::addCertification($certification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCertification(\FarmBundle\Entity\Certification $certification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCertification', [$certification]);

        return parent::removeCertification($certification);
    }

    /**
     * {@inheritDoc}
     */
    public function getCertifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCertifications', []);

        return parent::getCertifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addCultivar(\FarmBundle\Entity\Cultivar $cultivar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCultivar', [$cultivar]);

        return parent::addCultivar($cultivar);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCultivar(\FarmBundle\Entity\Cultivar $cultivar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCultivar', [$cultivar]);

        return parent::removeCultivar($cultivar);
    }

    /**
     * {@inheritDoc}
     */
    public function getCultivars()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCultivars', []);

        return parent::getCultivars();
    }

}
